{"ast":null,"code":"import _slicedToArray from \"/Users/sajjadtaghilou/Desktop/WEB/full-stack-helsinki/PART 2/countries/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sajjadtaghilou/Desktop/WEB/full-stack-helsinki/PART 2/countries/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Filter from \"./components/Filter\";\nimport Countries from \"./components/Countries\";\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        countries = _useState2[0],\n        setCountries = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        countrySearch = _useState4[0],\n        setCountryFilter = _useState4[1];\n\n  const onFilterSeacrh = event => {\n    setCountryFilter(event.target.value);\n  };\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n  const filteredCountries = countries.filter(country => {\n    if (countrySearch === \"\") {\n      return false;\n    } else {\n      return country.name.toLowerCase().indexOf(countrySearch.toLowerCase()) !== -1;\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    countries: countries,\n    countrySearch: countrySearch,\n    onFilterSeacrh: onFilterSeacrh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \" \", React.createElement(Countries, {\n    countries: filteredCountries,\n    setCountryFilter: setCountryFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sajjadtaghilou/Desktop/WEB/full-stack-helsinki/PART 2/countries/src/App.js"],"names":["React","useEffect","useState","axios","Filter","Countries","App","countries","setCountries","countrySearch","setCountryFilter","onFilterSeacrh","event","target","value","get","then","response","data","filteredCountries","filter","country","name","toLowerCase","indexOf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACkBJ,QAAQ,CAAC,EAAD,CAD1B;AAAA;AAAA,QACTK,SADS;AAAA,QACEC,YADF;;AAAA,qBAE0BN,QAAQ,CAAC,EAAD,CAFlC;AAAA;AAAA,QAETO,aAFS;AAAA,QAEMC,gBAFN;;AAIhB,QAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9BF,IAAAA,gBAAgB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACY,GAAN,CAAU,sCAAV,EAAkDC,IAAlD,CAAuDC,QAAQ,IAAI;AACjET,MAAAA,YAAY,CAACS,QAAQ,CAACC,IAAV,CAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,iBAAiB,GAAGZ,SAAS,CAACa,MAAV,CAAiBC,OAAO,IAAI;AACpD,QAAIZ,aAAa,KAAK,EAAtB,EAA0B;AACxB,aAAO,KAAP;AACD,KAFD,MAEO;AACL,aACEY,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCf,aAAa,CAACc,WAAd,EAAnC,MAAoE,CAAC,CADvE;AAGD;AACF,GARyB,CAA1B;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEhB,SADb;AAEE,IAAA,aAAa,EAAEE,aAFjB;AAGE,IAAA,cAAc,EAAEE,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKK,GALL,EAME,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEQ,iBADb;AAEE,IAAA,gBAAgB,EAAET,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAaD,CArCD;;AAsCA,eAAeJ,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Filter from \"./components/Filter\";\nimport Countries from \"./components/Countries\";\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [countrySearch, setCountryFilter] = useState(\"\");\n\n  const onFilterSeacrh = event => {\n    setCountryFilter(event.target.value);\n  };\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  const filteredCountries = countries.filter(country => {\n    if (countrySearch === \"\") {\n      return false;\n    } else {\n      return (\n        country.name.toLowerCase().indexOf(countrySearch.toLowerCase()) !== -1\n      );\n    }\n  });\n\n  return (\n    <div>\n      <Filter\n        countries={countries}\n        countrySearch={countrySearch}\n        onFilterSeacrh={onFilterSeacrh}\n      />{\" \"}\n      <Countries\n        countries={filteredCountries}\n        setCountryFilter={setCountryFilter}\n      />\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}