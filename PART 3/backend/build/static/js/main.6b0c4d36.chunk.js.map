{"version":3,"sources":["services/Persons.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","setPersons","name","number","onClick","event","window","confirm","personsService","updatedPersons","catch","error","console","log","Persons","persons","map","index","key","PersonForm","onPersonSuccess","onError","useState","newName","setNewName","newNumber","setNewNumber","addPerson","a","createdPerson","concat","onSubmit","preventDefault","nameObject","personMatch","find","findExistingPerson","undefined","nameMatch","personObject","errorString","updatePerson","value","onChange","target","type","Filter","filterName","onFilterChange","Notification","errorMessage","successMessage","className","Footer","style","color","fontStyle","fontSize","App","setFilter","setErrorMessage","setSuccessMessage","useEffect","initialPersons","message","filteredPersons","filter","toLowerCase","indexOf","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b0c4d36.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","import React from \"react\";\nimport personsService from \"../services/Persons\";\n\nconst Person = ({ person, setPersons }) => {\n  // delete Person\n  const deletePerson = event => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personsService\n        .remove(person.id)\n        .then(() => {\n          personsService.getAll().then(updatedPersons => {\n            setPersons(updatedPersons);\n          });\n        })\n        .catch(error => {\n          console.log(\"Person does not exist\");\n        });\n    }\n  };\n  return (\n    <p>\n      {person.name} {person.number} {\"\"}\n      <button onClick={deletePerson}>delete</button>\n    </p>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, setPersons }) => {\n  return persons.map((person, index) => (\n    <Person key={index} person={person} setPersons={setPersons} />\n  ));\n};\nexport default Persons;\n","import React, { useState } from \"react\";\nimport personsService from \"../services/Persons\";\n\nconst PersonForm = ({ persons, onPersonSuccess, onError }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const onNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const onNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  /// addPerson\n  const addPerson = async event => {\n    personsService.create({\n      name: newName,\n      number: newNumber\n    }).then(createdPerson => {\n      onPersonSuccess(persons.concat(createdPerson), `Added ${newName}`);\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }).catch(error => {\n      onError(error.response.data.error)\n    })\n\n  };\n  const findExistingPerson = newName => {\n    return persons.find(person => person.name === newName);\n  };\n\n  //update person info\n  const updatePerson = (nameMatch, personObject) => {\n    if (\n      window.confirm(\n        `${personObject.name} is already added to phonebook, replace the old number with the new one?`\n      )\n    ) {\n      const errorString = `Maybe ${personObject.name}' has already been removed from server`;\n      personsService\n        .update(nameMatch.id, personObject)\n        .then(() => {\n          personsService\n            .getAll()\n            .then(updatedPersons => {\n              onPersonSuccess(\n                updatedPersons,\n                `Updated ${personObject.name}'s info`\n              );\n            })\n            .catch(error => {\n\n              onError(errorString);\n            });\n        })\n        .catch(error => {\n\n          onError(error.response.data.error);\n        });\n    } else {\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  //handle data\n  const handleData = event => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    };\n    const personMatch = findExistingPerson(newName);\n    personMatch === undefined\n      ? addPerson(nameObject)\n      : updatePerson(personMatch, nameObject);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleData}>\n        <div>\n          name: <input value={newName} onChange={onNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={onNumberChange} />\n        </div>\n        <button type=\"submit\">add</button>\n      </form>\n    </div>\n  );\n};\nexport default PersonForm;\n","import React from \"react\";\n\nconst Filter = ({ filterName, onFilterChange }) => {\n  return (\n    <div>\n      filter shown with <input value={filterName} onChange={onFilterChange} />\n    </div>\n  );\n};\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ errorMessage, successMessage }) => {\n  if (errorMessage) {\n    return <div className=\"error\">{errorMessage}</div>;\n  } else if (successMessage) {\n    return <div className=\"success\">{successMessage}</div>;\n  } else {\n    return null;\n  }\n};\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Phonebook app, Svetlana Zhak, 2019</em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport personsService from \"./services/Persons\";\nimport Notification from \"./components/Notification.js\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterName, setFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const onFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, []);\n\n  const filteredPersons = persons.filter(\n    person => person.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\n  );\n\n  const onPersonSuccess = (persons, message) => {\n    setPersons(persons);\n    setSuccessMessage(message);\n    setTimeout(() => {\n      setSuccessMessage(\"\");\n    }, 3000);\n  };\n\n  const onError = errorString => {\n    setErrorMessage(errorString);\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 3000);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        errorMessage={errorMessage}\n        successMessage={successMessage}\n      />\n      <Filter\n        persons={persons}\n        filterName={filterName}\n        onFilterChange={onFilterChange}\n      />\n      <h2>add a new</h2>\n      <PersonForm\n        onPersonSuccess={onPersonSuccess}\n        onError={onError}\n        persons={persons}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} setPersons={setPersons} />\n      <Footer />\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}