{"ast":null,"code":"import _slicedToArray from \"/Users/sajjadtaghilou/Downloads/fstack_open-master/part1/courseinfo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sajjadtaghilou/Downloads/fstack_open-master/part1/courseinfo/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Header = props => {\n  //console.log(\"rerender from header\");\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.course.name);\n};\n\nconst Content = props => {\n  //console.log(props.course.parts[0].name)\n  const paragraphs = props.course.parts.map(part => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" \", part.name, \" \", part.exercises)); //console.log(paragraphs);\n\n  return React.createElement(React.Fragment, null, paragraphs);\n};\n\nconst Total = props => {\n  return (// <p>Number of exercises {props.course.parts[0].exercises+props.course.parts[1].exercises+props.course.parts[2].exercises}</p>\n    React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" Number of exercises \", props.course.parts.map(item => item.exercises).reduce((accumulator, currValue) => accumulator + currValue))\n  );\n};\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n  setTimeout(() => setCounter(counter + 1), 1000);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Header, {\n    course: course,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Content, {\n    course: course,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Total, {\n    course: course,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, counter));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA","map":{"version":3,"sources":["/Users/sajjadtaghilou/Downloads/fstack_open-master/part1/courseinfo/src/index.js"],"names":["React","useState","ReactDOM","Header","props","course","name","Content","paragraphs","parts","map","part","exercises","Total","item","reduce","accumulator","currValue","App","counter","setCounter","setTimeout","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,MAAN,CAAaC,IAAlB,CADF;AAGD,CALD;;AAOA,MAAMC,OAAO,GAAIH,KAAD,IAAW;AACzB;AACA,QAAMI,UAAU,GAAGJ,KAAK,CAACC,MAAN,CAAaI,KAAb,CAAmBC,GAAnB,CACjBC,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKA,IAAI,CAACL,IAAV,OAAiBK,IAAI,CAACC,SAAtB,CADS,CAAnB,CAFyB,CAKzB;;AACA,SACE,0CACCJ,UADD,CADF;AAKD,CAXD;;AAaA,MAAMK,KAAK,GAAIT,KAAD,IAAW;AAEvB,SACE;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAyBA,KAAK,CAACC,MAAN,CAAaI,KAAb,CAAmBC,GAAnB,CAAuBI,IAAI,IAAIA,IAAI,CAACF,SAApC,EAA+CG,MAA/C,CAAsD,CAACC,WAAD,EAAcC,SAAd,KAA4BD,WAAW,GAAGC,SAAhG,CAAzB;AAFN;AAID,CAND;;AAWA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACcjB,QAAQ,CAAC,CAAD,CADtB;AAAA;AAAA,QACTkB,OADS;AAAA,QACAC,UADA;;AAEhB,QAAMf,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,oCADO;AAEbG,IAAAA,KAAK,EAAE,CACL;AACAH,MAAAA,IAAI,EAAE,uBADN;AAEAM,MAAAA,SAAS,EAAE;AAFX,KADK,EAKL;AACAN,MAAAA,IAAI,EAAE,0BADN;AAEAM,MAAAA,SAAS,EAAE;AAFX,KALK,EASL;AACAN,MAAAA,IAAI,EAAE,sBADN;AAEAM,MAAAA,SAAS,EAAE;AAFX,KATK;AAFM,GAAf;AAiBAS,EAAAA,UAAU,CACN,MAAMD,UAAU,CAACD,OAAO,GAAG,CAAX,CADV,EAEL,IAFK,CAAV;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEd,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEA,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEA,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIc,OAAJ,CAJF,CADF;AASD,CA/BD;;AAgCAjB,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B,E,CAEA;AACA;AACA","sourcesContent":["import React, { useState } from  'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Header = (props) => {\n  //console.log(\"rerender from header\");\n  return (\n    <h1>{props.course.name}</h1>\n  )\n}\n\nconst Content = (props) => {\n  //console.log(props.course.parts[0].name)\n  const paragraphs = props.course.parts.map(\n    part => <p> {part.name} {part.exercises}</p>\n  )\n  //console.log(paragraphs);\n  return (\n    <>\n    {paragraphs}\n    </>\n  )\n}\n\nconst Total = (props) => {\n\n  return (\n    // <p>Number of exercises {props.course.parts[0].exercises+props.course.parts[1].exercises+props.course.parts[2].exercises}</p>\n        <p> Number of exercises {props.course.parts.map(item => item.exercises).reduce((accumulator, currValue) => accumulator + currValue) }</p>\n    )\n}\n\n\n\n\nconst App = () => {\n  const [counter, setCounter] = useState(0);\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n      name: 'Fundamentals of React',\n      exercises: 10\n      },\n      {\n      name: 'Using props to pass data',\n      exercises: 7\n      },\n      {\n      name: 'State of a component',\n      exercises: 14\n      }\n    ] \n  }\n  setTimeout(\n      () => setCounter(counter + 1),\n       1000);\n  return (\n    <div>\n      <Header course={course}/>\n      <Content course={course}/>\n      <Total course={course}/>\n      <p>{counter}</p>\n    </div>\n\n  )\n}\nReactDOM.render(<App /> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"]},"metadata":{},"sourceType":"module"}